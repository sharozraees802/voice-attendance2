<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>